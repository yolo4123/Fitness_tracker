import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Skeleton } from "@/components/ui/skeleton";
import { Trophy, Calendar, TrendingUp } from "lucide-react";
import { format } from "date-fns";

const recordTypeLabels = {
  max_weight: "Max Weight",
  max_reps: "Max Reps", 
  max_distance: "Max Distance",
  best_time: "Best Time"
};

const recordTypeIcons = {
  max_weight: "üèãÔ∏è",
  max_reps: "üî•",
  max_distance: "üèÉ",
  best_time: "‚è±Ô∏è"
};

export default function RecentPRs({ personalRecords, isLoading }) {
  if (isLoading) {
    return (
      <Card className="workout-card border-0">
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Trophy className="w-5 h-5 text-yellow-600" />
            Personal Records
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-3">
          {Array(3).fill(0).map((_, i) => (
            <div key={i} className="p-3 bg-slate-50 rounded-lg">
              <Skeleton className="h-4 w-24 mb-2" />
              <Skeleton className="h-3 w-16" />
            </div>
          ))}
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="workout-card border-0">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-slate-900">
          <Trophy className="w-5 h-5 text-yellow-600" />
          Personal Records
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-3">
        {personalRecords.length === 0 ? (
          <div className="text-center py-6">
            <Trophy className="w-10 h-10 text-slate-300 mx-auto mb-2" />
            <p className="text-slate-500 font-medium">No PRs yet</p>
            <p className="text-xs text-slate-400">Keep pushing your limits!</p>
          </div>
        ) : (
          personalRecords.slice(0, 5).map((pr) => (
            <div 
              key={pr.id} 
              className="p-4 pr-shine rounded-xl shadow-sm"
            >
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <span className="text-lg">
                      {recordTypeIcons[pr.record_type]}
                    </span>
                    <h4 className="font-semibold text-white">
                      {pr.exercise_name}
                    </h4>
                  </div>
                  <div className="flex items-center gap-3">
                    <Badge 
                      variant="secondary" 
                      className="bg-white/20 text-white border-white/30 text-xs"
                    >
                      {recordTypeLabels[pr.record_type]}
                    </Badge>
                    <span className="text-white/90 text-sm font-medium">
                      {pr.value} {pr.record_type === 'max_weight' ? 'kg' : 
                                pr.record_type === 'max_distance' ? 'm' :
                                pr.record_type === 'best_time' ? 's' : ''}
                    </span>
                  </div>
                </div>
                <div className="text-right">
                  <div className="flex items-center gap-1 text-white/90 text-xs">
                    <Calendar className="w-3 h-3" />
                    {format(new Date(pr.date_achieved), "MMM d")}
                  </div>
                  {pr.previous_record && (
                    <div className="flex items-center gap-1 text-white/80 text-xs mt-1">
                      <TrendingUp className="w-3 h-3" />
                      +{(pr.value - pr.previous_record).toFixed(1)}
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))
        )}
      </CardContent>
    </Card>
  );
}