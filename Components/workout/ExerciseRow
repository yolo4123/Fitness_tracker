import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Trash2, Plus, Minus } from "lucide-react";

const categoryColors = {
  chest: "bg-red-100 text-red-800",
  back: "bg-blue-100 text-blue-800", 
  shoulders: "bg-yellow-100 text-yellow-800",
  arms: "bg-green-100 text-green-800",
  legs: "bg-purple-100 text-purple-800",
  core: "bg-orange-100 text-orange-800",
  cardio: "bg-pink-100 text-pink-800",
  functional: "bg-indigo-100 text-indigo-800"
};

export default function ExerciseRow({ exercise, onUpdate, onRemove }) {
  const updateSet = (setIndex, field, value) => {
    const newSets = [...exercise.sets];
    newSets[setIndex] = {
      ...newSets[setIndex],
      [field]: parseFloat(value) || 0
    };
    onUpdate({
      ...exercise,
      sets: newSets
    });
  };

  const addSet = () => {
    onUpdate({
      ...exercise,
      sets: [...exercise.sets, { reps: 0, weight: 0, rest_seconds: 60 }]
    });
  };

  const removeSet = (setIndex) => {
    if (exercise.sets.length > 1) {
      const newSets = exercise.sets.filter((_, index) => index !== setIndex);
      onUpdate({
        ...exercise,
        sets: newSets
      });
    }
  };

  return (
    <Card className="bg-gradient-to-r from-slate-50 to-slate-100 border border-slate-200/50">
      <CardHeader className="flex flex-row items-center justify-between pb-3">
        <div className="flex items-center gap-3">
          <CardTitle className="text-lg font-semibold text-slate-900">
            {exercise.name}
          </CardTitle>
          <Badge className={`${categoryColors[exercise.category]} text-xs`}>
            {exercise.category}
          </Badge>
        </div>
        <Button
          variant="ghost"
          size="icon"
          onClick={onRemove}
          className="text-red-500 hover:text-red-700 hover:bg-red-50"
        >
          <Trash2 className="w-4 h-4" />
        </Button>
      </CardHeader>
      
      <CardContent className="space-y-3">
        <div className="grid grid-cols-4 gap-3 text-sm font-medium text-slate-600 px-2">
          <span>Set</span>
          <span>Weight (kg)</span>
          <span>Reps</span>
          <span>Rest (sec)</span>
        </div>
        
        {exercise.sets.map((set, setIndex) => (
          <div key={setIndex} className="grid grid-cols-4 gap-3 items-center">
            <div className="flex items-center justify-center">
              <Badge variant="outline" className="w-8 h-8 rounded-full p-0 flex items-center justify-center">
                {setIndex + 1}
              </Badge>
            </div>
            <Input
              type="number"
              step="0.5"
              min="0"
              value={set.weight || ''}
              onChange={(e) => updateSet(setIndex, 'weight', e.target.value)}
              className="text-center border-slate-200 focus:border-blue-500"
              placeholder="0"
            />
            <Input
              type="number"
              min="0"
              value={set.reps || ''}
              onChange={(e) => updateSet(setIndex, 'reps', e.target.value)}
              className="text-center border-slate-200 focus:border-blue-500"
              placeholder="0"
            />
            <div className="flex items-center gap-1">
              <Input
                type="number"
                min="0"
                value={set.rest_seconds || ''}
                onChange={(e) => updateSet(setIndex, 'rest_seconds', e.target.value)}
                className="text-center border-slate-200 focus:border-blue-500"
                placeholder="60"
              />
              {exercise.sets.length > 1 && (
                <Button
                  variant="ghost"
                  size="icon"
                  onClick={() => removeSet(setIndex)}
                  className="w-8 h-8 text-red-500 hover:text-red-700 hover:bg-red-50"
                >
                  <Minus className="w-3 h-3" />
                </Button>
              )}
            </div>
          </div>
        ))}
        
        <Button
          variant="outline"
          size="sm"
          onClick={addSet}
          className="w-full gap-2 border-dashed hover:bg-slate-50"
        >
          <Plus className="w-4 h-4" />
          Add Set
        </Button>
      </CardContent>
    </Card>
  );
}